#!/bin/bash

set -eu -o pipefail

cd "$(dirname "$0")"
source "./common.sh"

SUPPORTED_VERSIONS_REGEXP='^(latest|alpine|passenger|4)'

# Image digests from https://hub.docker.com/v2/repositories/library/redmine/tags are
# unfortunately unusable. See https://github.com/docker/hub-feedback/issues/1925,
# `docker manifest inspect --verbose redmine:tag` and the command docs for more info
get_image_digest()
{
  local tag=$1
  curl -sS "$DOCKER_HUB_REGISTRY_URL/v2/library/redmine/manifests/$tag" \
      -H "Authorization:Bearer $(get_docker_hub_token library/redmine)" \
      -H "Accept: application/vnd.docker.distribution.manifest.list.v2+json" | \
      jq -r '.manifests[] | select(.platform.os == "linux" and .platform.architecture == "amd64") | .digest'
}

get_tags()
{
  local image=$1
  local next_page="https://hub.docker.com/v2/repositories/$image/tags?ordering=last_updated"
  local page
  local versions

  while [ "$next_page" != 'null' ]; do
    page=$(curl -sS "$next_page")
    versions+=$(echo "$page" | jq -r '.results[] | . as $result | .images[] | select(.os == "linux" and .architecture == "amd64") | $result.name')$'\n'

    next_page=$(echo "$page" | jq -r '.next')
  done

  echo "$versions" | sort | uniq
}

get_supported_tags()
{
  get_tags library/redmine | grep -E "$SUPPORTED_VERSIONS_REGEXP"
}

sort_tags()
{
  local tags=$(sort -Vr <<< "$1")
  echo "$tags" | grep -v '[0-9]' # non-numeric tags
  echo "$tags" | grep -E '^[0-9]+[^.]*$' ||: # numeric tags prefixed with only one number
  echo "$tags" | grep -E '^[0-9]+\.[0-9]+[^.]*$' ||: # numeric tags prefixed with two numbers
  echo "$tags" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+' ||: # semver tags
}

print_tags()
{
  local tags=$1
  sort_tags "$tags" | sed -E 's/[^ ]+/`&`/g' | sed 's/ /, /g' | tr '\n' ' ' | sed 's/ $//'
}

print_readme()
{
  cat docs/autogenerated-warning.md
  local tags=$(get_tags "$GFM_IMAGE_NAME")
  local debian_tags=$(grep -Ev '(alpine|passenger)$' <<< "$tags")
  local alpine_tags=$(grep alpine <<< "$tags")
  local passenger_tags=$(grep passenger <<< "$tags")
  echo "# Supported tags"$'\n'
  echo "- $(print_tags "$debian_tags")"
  echo "- $(print_tags "$alpine_tags")"
  echo "- $(print_tags "$passenger_tags")"
  echo
  cat docs/content.md
}

if [ -z "${DOCKER_HUB_USERNAME-}" ]; then
  fail "DOCKER_HUB_USERNAME environment variable must be set."
fi

if [ -z "${DOCKER_HUB_PASSWORD-}" ]; then
  fail "DOCKER_HUB_PASSWORD environment variable must be set."
fi

echo "env:" > tags.yml
for tag in $(get_supported_tags); do
  echo "  - TAG=$tag FROM_IMAGE_DIGEST=$(get_image_digest $tag)" >> tags.yml
done

print_readme > README.md
